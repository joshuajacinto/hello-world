{"title":"Build a JavaScript Command Line Interface","authors":["Lukas White and James Hibbard"],"publisher":"sitepoint","version":1,"chapters":[{"title":"Preface","author":"","block":"k6fwzkus","number":0,"contents":[{"block_type":"element","block":"k6fwzr67","search_text":"Build a JavaScript Command Line Interface (CLI) with Node.js","text_count":60,"tag_name":"h2","attributes":{"id":"maintitle"},"children":[{"block_type":"text","content":"Build a JavaScript Command Line Interface (CLI) with Node.js"}]},{"block_type":"element","block":"k6fwzr68","search_text":"Copyright © 2020 SitePoint Pty. Ltd.","text_count":36,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Copyright &copy; 2020 SitePoint Pty. Ltd."}]},{"block_type":"element","block":"k6fwzr69","search_text":"Authors: Lukas White and James Hibbard Cover Design: Alex Walker ","text_count":65,"tag_name":"ul","attributes":{},"children":[{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"strong","attributes":{},"children":[{"block_type":"text","content":"Authors:"}]},{"block_type":"text","content":"Lukas White and James Hibbard"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"strong","attributes":{},"children":[{"block_type":"text","content":"Cover Design:"}]},{"block_type":"text","content":"Alex Walker"}]}]},{"block_type":"element","block":"k6fwzr6a","search_text":"Notice of Rights","text_count":16,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Notice of Rights"}]},{"block_type":"element","block":"k6fwzr6b","search_text":"All rights reserved. No part of this book may be reproduced, stored in a retrieval system or transmitted in any form or by any means, without the prior written permission of the publisher, except in the case of brief quotations embodied in critical articles or reviews.","text_count":269,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"All rights reserved. No part of this book may be reproduced, stored in a retrieval system or transmitted in any form or by any means, without the prior written permission of the publisher, except in the case of brief quotations embodied in critical articles or reviews."}]},{"block_type":"element","block":"k6fwzr6c","search_text":"Notice of Liability","text_count":19,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Notice of Liability"}]},{"block_type":"element","block":"k6fwzr6d","search_text":"The author and publisher have made every effort to ensure the accuracy of the information herein. However, the information contained in this book is sold without warranty, either express or implied. Neither the authors and SitePoint Pty. Ltd., nor its dealers or distributors will be held liable for any damages to be caused either directly or indirectly by the instructions contained in this book, or by the software or hardware products described herein.","text_count":456,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"The author and publisher have made every effort to ensure the accuracy of the information herein. However, the information contained in this book is sold without warranty, either express or implied. Neither the authors and SitePoint Pty. Ltd., nor its dealers or distributors will be held liable for any damages to be caused either directly or indirectly by the instructions contained in this book, or by the software or hardware products described herein."}]},{"block_type":"element","block":"k6fwzr6e","search_text":"Trademark Notice","text_count":16,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Trademark Notice"}]},{"block_type":"element","block":"k6fwzr6f","search_text":"Rather than indicating every occurrence of a trademarked name as such, this book uses the names only in an editorial fashion and to the benefit of the trademark owner with no intention of infringement of the trademark.","text_count":218,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Rather than indicating every occurrence of a trademarked name as such, this book uses the names only in an editorial fashion and to the benefit of the trademark owner with no intention of infringement of the trademark."}]},{"block_type":"element","block":"k6fwzr6g","search_text":"","text_count":0,"tag_name":"img","attributes":{"src":"https://learnable-static.s3.amazonaws.com/premium/reeedr/books/build-a-javascript-command-line-interface-cli-with-node-js/images/sitepoint-gray.svg","alt":"SitePoint logo","width":"160","class":"lazyload"},"children":[]},{"block_type":"element","block":"k6fwzr6h","search_text":"Published by SitePoint Pty. Ltd.","text_count":32,"tag_name":"p","attributes":{},"children":[{"block_type":"element","tag_name":"br","attributes":{},"children":[]},{"block_type":"text","content":"Published by SitePoint Pty. Ltd."}]},{"block_type":"element","block":"k6fwzr6i","search_text":"48 Cambridge Street Collingwood VIC Australia 3066 Web: www.sitepoint.com Email: books@sitepoint.com","text_count":100,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"48 Cambridge Street Collingwood"},{"block_type":"element","tag_name":"br","attributes":{},"children":[]},{"block_type":"text","content":"VIC Australia 3066"},{"block_type":"element","tag_name":"br","attributes":{},"children":[]},{"block_type":"text","content":"Web: www.sitepoint.com"},{"block_type":"element","tag_name":"br","attributes":{},"children":[]},{"block_type":"text","content":"Email: books@sitepoint.com"}]},{"block_type":"element","block":"k6fwzr6j","search_text":"About SitePoint","text_count":15,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"About SitePoint"}]},{"block_type":"element","block":"k6fwzr6k","search_text":"SitePoint specializes in publishing fun, practical, and easy-to-understand content for web professionals. Visit sitepoint.com to access our blogs, books, newsletters, articles, and community forums. You’ll find a stack of information on JavaScript, PHP, Ruby, mobile development, design, and more.","text_count":297,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"SitePoint specializes in publishing fun, practical, and easy-to-understand content for web professionals. Visit"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.sitepoint.com/"},"children":[{"block_type":"text","content":"sitepoint.com"}]},{"block_type":"text","content":"to access our blogs, books, newsletters, articles, and community forums. You&rsquo;ll find a stack of information on JavaScript, PHP, Ruby, mobile development, design, and more."}]}]},{"title":"Build a JavaScript Command Line Interface (CLI) with Node.js","author":"Lukas White and James Hibbard","block":"k6fwzkw7","number":1,"contents":[{"block_type":"element","block":"k6fwzr6l","search_text":"As great as Node.js is for “traditional” web applications, its potential uses are far broader. Microservices, REST APIs, tooling, working with the Internet of Things and even desktop applications: it’s got your back.","text_count":216,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"As great as Node.js is for &ldquo;traditional&rdquo; web applications, its potential uses are far broader. Microservices, REST APIs, tooling, working with the Internet of Things and even desktop applications: it&rsquo;s got your back."}]},{"block_type":"element","block":"k6fwzr6m","search_text":"Another area where Node.js is really useful is for building command-line applications—and that’s what we’re going to be doing in this tutorial. We’re going to start by looking at a number of third-party packages designed to help work with the command line, then build a real-world example from scratch.","text_count":302,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Another area where Node.js is really useful is for building command-line applications&mdash;and that&rsquo;s what we&rsquo;re going to be doing in this tutorial. We&rsquo;re going to start by looking at a number of third-party packages designed to help work with the command line, then build a real-world example from scratch."}]},{"block_type":"element","block":"k6fwzr6n","search_text":"What we’re going to build is a tool for initializing a Git repository. Sure, it’ll run git init under the hood, but it’ll do more than just that. It will also create a remote repository on GitHub right from the command line, allow the user to interactively create a .gitignore file, and finally perform an initial commit and push.","text_count":330,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"What we&rsquo;re going to build is a tool for initializing a Git repository. Sure, it&rsquo;ll run"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"git init"}]},{"block_type":"text","content":"under the hood, but it&rsquo;ll do more than just that. It will also create a remote repository on GitHub right from the command line, allow the user to interactively create a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".gitignore"}]},{"block_type":"text","content":"file, and finally perform an initial commit and push."}]},{"block_type":"element","block":"k6fwzr6o","search_text":"The code accompanying this tutorial can be found in this GitHub repo .","text_count":70,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"The code accompanying this tutorial can be found in"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://github.com/sitepoint-editors/ginit"},"children":[{"block_type":"text","content":"this GitHub repo"}]},{"block_type":"text","content":"."}]},{"block_type":"element","block":"k6fwzr6p","search_text":"Why Build a Command-line Tool with Node.js?","text_count":43,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Why Build a Command-line Tool with Node.js?"}]},{"block_type":"element","block":"k6fwzr6q","search_text":"Before we dive in and start building, it’s worth looking at why we might choose Node.js to build a command-line application.","text_count":124,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Before we dive in and start building, it&rsquo;s worth looking at why we might choose Node.js to build a command-line application."}]},{"block_type":"element","block":"k6fwzr6r","search_text":"The most obvious advantage is that, if you’re reading this, you’re probably already familiar with it—and, indeed, with JavaScript.","text_count":130,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"The most obvious advantage is that, if you&rsquo;re reading this, you&rsquo;re probably already familiar with it&mdash;and, indeed, with JavaScript."}]},{"block_type":"element","block":"k6fwzr6s","search_text":"Another key advantage, as we’ll see as we go along, is that the strong Node.js ecosystem means that among the hundreds of thousands of packages available for all manner of purposes, there are a number which are specifically designed to help build powerful command-line tools.","text_count":275,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Another key advantage, as we&rsquo;ll see as we go along, is that the strong Node.js ecosystem means that among the hundreds of thousands of packages available for all manner of purposes, there are a number which are specifically designed to help build powerful command-line tools."}]},{"block_type":"element","block":"k6fwzr6t","search_text":"Finally, we can use npm to manage any dependencies, rather than have to worry about OS-specific package managers such as Aptitude, Yum or Homebrew.","text_count":147,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Finally, we can use"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"npm"}]},{"block_type":"text","content":"to manage any dependencies, rather than have to worry about OS-specific package managers such as Aptitude, Yum or Homebrew."}]},{"block_type":"element","block":"k6fwzr6u","search_text":"Command-line Tool Dependencies","text_count":30,"tag_name":"h4","attributes":{},"children":[{"block_type":"text","content":"Command-line Tool Dependencies"}]},{"block_type":"element","block":"k6fwzr6v","search_text":"That isn’t necessarily true, in that your command-line tool may have other external dependencies.","text_count":97,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"That isn&rsquo;t necessarily true, in that your command-line tool may have other external dependencies."}]},{"block_type":"element","block":"k6fwzr6w","search_text":"What We’re Going to Build: ginit","text_count":32,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"What We&rsquo;re Going to Build: ginit"}]},{"block_type":"element","block":"k6fwzr6x","search_text":"","text_count":0,"tag_name":"p","attributes":{"class":"f-center"},"children":[{"block_type":"element","tag_name":"img","attributes":{"src":"https://learnable-static.s3.amazonaws.com/premium/reeedr/books/build-a-javascript-command-line-interface-cli-with-node-js/images/ginit-in-action.png","alt":"Ginit, our Node CLI in action","class":"lazyload"},"children":[]}]},{"block_type":"element","block":"k6fwzr6y","search_text":"For this tutorial, we’re going to create a command-line utility which I’m calling ginit . It’s git init , but on steroids.","text_count":122,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"For this tutorial, we&rsquo;re going to create a command-line utility which I&rsquo;m calling"},{"block_type":"element","tag_name":"strong","attributes":{},"children":[{"block_type":"text","content":"ginit"}]},{"block_type":"text","content":". It&rsquo;s"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"git init"}]},{"block_type":"text","content":", but on steroids."}]},{"block_type":"element","block":"k6fwzr6z","search_text":"You’re probably wondering what on earth that means.","text_count":51,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"You&rsquo;re probably wondering what on earth that means."}]},{"block_type":"element","block":"k6fwzr70","search_text":"As you no doubt already know, git init initializes a Git repository in the current folder. However, that’s usually only one of a number of repetitive steps involved in the process of hooking up a new or existing project to Git. For example, as part of a typical workflow, you may well:","text_count":285,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"As you no doubt already know,"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"git init"}]},{"block_type":"text","content":"initializes a Git repository in the current folder. However, that&rsquo;s usually only one of a number of repetitive steps involved in the process of hooking up a new or existing project to Git. For example, as part of a typical workflow, you may well:"}]},{"block_type":"element","block":"k6fwzr71","search_text":"Initialize the local repository by running git init Create a remote repository, for example on GitHub or Bitbucket—typically by leaving the command line and firing up a web browser Add the remote Create a .gitignore file Add your project files Commit the initial set of files Push up to the remote repository ","text_count":309,"tag_name":"ol","attributes":{},"children":[{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"Initialize the local repository by running"},{"block_type":"element","tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"git init"}]}]}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"Create a remote repository, for example on GitHub or Bitbucket&mdash;typically by leaving the command line and firing up a web browser"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"Add the remote"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"Create a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".gitignore"}]},{"block_type":"text","content":"file"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"Add your project files"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"Commit the initial set of files"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"Push up to the remote repository"}]}]},{"block_type":"element","block":"k6fwzr72","search_text":"There are often more steps involved, but we’ll stick to those for the purposes of our app. Nevertheless, these steps are pretty repetitive. Wouldn’t it be better if we could do all this from the command line, with no copy-pasting of Git URLs and such like?","text_count":256,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"There are often more steps involved, but we&rsquo;ll stick to those for the purposes of our app. Nevertheless, these steps are pretty repetitive. Wouldn&rsquo;t it be better if we could do all this from the command line, with no copy-pasting of Git URLs and such like?"}]},{"block_type":"element","block":"k6fwzr73","search_text":"So what ginit will do is create a Git repository in the current folder, create a remote repository—we’ll be using GitHub for this—and then add it as a remote. Then it will provide a simple interactive “wizard” for creating a .gitignore file, add the contents of the folder and push it up to the remote repository. It might not save you hours, but it’ll remove some of the initial friction when starting a new project.","text_count":417,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"So what ginit will do is create a Git repository in the current folder, create a remote repository&mdash;we&rsquo;ll be using GitHub for this&mdash;and then add it as a remote. Then it will provide a simple interactive &ldquo;wizard&rdquo; for creating a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".gitignore"}]},{"block_type":"text","content":"file, add the contents of the folder and push it up to the remote repository. It might not save you hours, but it&rsquo;ll remove some of the initial friction when starting a new project."}]},{"block_type":"element","block":"k6fwzr74","search_text":"With that in mind, let’s get started.","text_count":37,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"With that in mind, let&rsquo;s get started."}]},{"block_type":"element","block":"k6fwzr75","search_text":"The Application Dependencies","text_count":28,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"The Application Dependencies"}]},{"block_type":"element","block":"k6fwzr76","search_text":"One thing is for certain: in terms of appearance, the console will never have the sophistication of a graphical user interface. Nevertheless, that doesn’t mean it has to be plain, ugly, monochrome text. You might be surprised by just how much you can do visually, while at the same time keeping it functional. We’ll be looking at a couple of libraries for enhancing the display: chalk for colorizing the output and clui to add some additional visual components. Just for fun, we’ll use figlet to create a fancy ASCII-based banner, and we’ll also use clear to clear the console.","text_count":577,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"One thing is for certain: in terms of appearance, the console will never have the sophistication of a graphical user interface. Nevertheless, that doesn&rsquo;t mean it has to be plain, ugly, monochrome text. You might be surprised by just how much you can do visually, while at the same time keeping it functional. We&rsquo;ll be looking at a couple of libraries for enhancing the display:"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/chalk"},"children":[{"block_type":"text","content":"chalk"}]},{"block_type":"text","content":"for colorizing the output and"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/clui"},"children":[{"block_type":"text","content":"clui"}]},{"block_type":"text","content":"to add some additional visual components. Just for fun, we&rsquo;ll use"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/figlet"},"children":[{"block_type":"text","content":"figlet"}]},{"block_type":"text","content":"to create a fancy ASCII-based banner, and we&rsquo;ll also use"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/clear"},"children":[{"block_type":"text","content":"clear"}]},{"block_type":"text","content":"to clear the console."}]},{"block_type":"element","block":"k6fwzr77","search_text":"In terms of input and output, the low-level Readline Node.js module could be used to prompt the user and request input, and in simple cases is more than adequate. But we’re going to take advantage of a third-party package which adds a greater degree of sophistication— Inquirer . As well as providing a mechanism for asking questions, it also implements simple input controls: think radio buttons and checkboxes, but in the console.","text_count":432,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"In terms of input and output, the low-level"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://nodejs.org/api/readline.html"},"children":[{"block_type":"text","content":"Readline"}]},{"block_type":"text","content":"Node.js module could be used to prompt the user and request input, and in simple cases is more than adequate. But we&rsquo;re going to take advantage of a third-party package which adds a greater degree of sophistication&mdash;"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/inquirer"},"children":[{"block_type":"text","content":"Inquirer"}]},{"block_type":"text","content":". As well as providing a mechanism for asking questions, it also implements simple input controls: think radio buttons and checkboxes, but in the console."}]},{"block_type":"element","block":"k6fwzr78","search_text":"We’ll also be using minimist to parse command-line arguments.","text_count":61,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"We&rsquo;ll also be using"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/minimist"},"children":[{"block_type":"text","content":"minimist"}]},{"block_type":"text","content":"to parse command-line arguments."}]},{"block_type":"element","block":"k6fwzr79","search_text":"Here’s a complete list of the packages we’ll use specifically for developing on the command line:","text_count":97,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Here&rsquo;s a complete list of the packages we&rsquo;ll use specifically for developing on the command line:"}]},{"block_type":"element","block":"k6fwzr7a","search_text":"chalk : colorizes the output clear : clears the terminal screen clui : draws command-line tables, gauges and spinners figlet : creates ASCII art from text inquirer : creates interactive command-line user interface minimist : parses argument options configstore : easily loads and saves config without you having to think about where and how ","text_count":341,"tag_name":"ul","attributes":{},"children":[{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/chalk"},"children":[{"block_type":"text","content":"chalk"}]},{"block_type":"text","content":": colorizes the output"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/clear"},"children":[{"block_type":"text","content":"clear"}]},{"block_type":"text","content":": clears the terminal screen"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/clui"},"children":[{"block_type":"text","content":"clui"}]},{"block_type":"text","content":": draws command-line tables, gauges and spinners"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/figlet"},"children":[{"block_type":"text","content":"figlet"}]},{"block_type":"text","content":": creates ASCII art from text"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/inquirer"},"children":[{"block_type":"text","content":"inquirer"}]},{"block_type":"text","content":": creates interactive command-line user interface"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/minimist"},"children":[{"block_type":"text","content":"minimist"}]},{"block_type":"text","content":": parses argument options"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/configstore"},"children":[{"block_type":"text","content":"configstore"}]},{"block_type":"text","content":": easily loads and saves config without you having to think about where and how"}]}]},{"block_type":"element","block":"k6fwzr7b","search_text":"Additionally, we’ll also be using the following:","text_count":48,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Additionally, we&rsquo;ll also be using the following:"}]},{"block_type":"element","block":"k6fwzr7c","search_text":"@octokit/rest : a GitHub REST API client for Node.js @octokit/auth-basic : an implementation of one of GitHub’s authentication strategies lodash : a JavaScript utility library simple-git : a tool for running Git commands in a Node.js application touch : a tool for implementing the Unix touch command ","text_count":301,"tag_name":"ul","attributes":{},"children":[{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/@octokit/rest"},"children":[{"block_type":"text","content":"@octokit/rest"}]},{"block_type":"text","content":": a GitHub REST API client for Node.js"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/@octokit/auth-basic"},"children":[{"block_type":"text","content":"@octokit/auth-basic"}]},{"block_type":"text","content":": an implementation of one of"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://github.com/octokit/auth.js"},"children":[{"block_type":"text","content":"GitHub&rsquo;s authentication strategies"}]}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/lodash"},"children":[{"block_type":"text","content":"lodash"}]},{"block_type":"text","content":": a JavaScript utility library"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/simple-git"},"children":[{"block_type":"text","content":"simple-git"}]},{"block_type":"text","content":": a tool for running Git commands in a Node.js application"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/touch"},"children":[{"block_type":"text","content":"touch"}]},{"block_type":"text","content":": a tool for implementing the Unix touch command"}]}]},{"block_type":"element","block":"k6fwzr7d","search_text":"Getting Started","text_count":15,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Getting Started"}]},{"block_type":"element","block":"k6fwzr7e","search_text":"Although we’re going to create the application from scratch, don’t forget that you can also grab a copy of the code from the repository which accompanies this article .","text_count":168,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Although we&rsquo;re going to create the application from scratch, don&rsquo;t forget that you can also grab a copy of the code from the"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://github.com/sitepoint-editors/ginit"},"children":[{"block_type":"text","content":"repository which accompanies this article"}]},{"block_type":"text","content":"."}]},{"block_type":"element","block":"k6fwzr7f","search_text":"Create a new directory for the project. You don’t have to call it ginit , of course:","text_count":84,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Create a new directory for the project. You don&rsquo;t have to call it"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"ginit"}]},{"block_type":"text","content":", of course:"}]},{"block_type":"element","block":"k6fwzr7g","search_text":"mkdir ginit cd ginit ","text_count":21,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"mkdir ginit\ncd ginit"}]}]},{"block_type":"element","block":"k6fwzr7h","search_text":"Create a new package.json file:","text_count":31,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Create a new"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"package.json"}]},{"block_type":"text","content":"file:"}]},{"block_type":"element","block":"k6fwzr7i","search_text":"npm init -y ","text_count":12,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"npm init -y"}]}]},{"block_type":"element","block":"k6fwzr7j","search_text":"And edit it to look like so:","text_count":28,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"And edit it to look like so:"}]},{"block_type":"element","block":"k6fwzr7k","search_text":"{ \"name\": \"ginit\", \"version\": \"1.0.0\", \"description\": \"'git init' on steroids\", \"main\": \"index.js\", \"scripts\": { \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\" }, \"keywords\": [ \"Git\", \"CLI\" ], \"author\": \"<YOUR NAME>\", \"license\": \"ISC\" } ","text_count":244,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"{\n  \"name\": \"ginit\",\n  \"version\": \"1.0.0\",\n  \"description\": \"'git init' on steroids\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"\n  },\n  \"keywords\": [\n    \"Git\",\n    \"CLI\"\n  ],\n  \"author\": \"&lt;YOUR NAME&gt;\",\n  \"license\": \"ISC\"\n}"}]}]},{"block_type":"element","block":"k6fwzr7l","search_text":"Now install the dependencies:","text_count":29,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Now install the dependencies:"}]},{"block_type":"element","block":"k6fwzr7m","search_text":"npm install chalk clear clui figlet inquirer minimist configstore @octokit/rest @octokit/auth-basic lodash simple-git touch ","text_count":124,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"npm install chalk clear clui figlet inquirer minimist configstore @octokit/rest @octokit/auth-basic lodash simple-git touch"}]}]},{"block_type":"element","block":"k6fwzr7n","search_text":"Now create an index.js file in the same folder and require the following dependencies:","text_count":86,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Now create an"},{"block_type":"element","tag_name":"code","attributes":{"class":""},"children":[{"block_type":"text","content":"index.js"}]},{"block_type":"text","content":"file in the same folder and"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"require"}]},{"block_type":"text","content":"the following dependencies:"}]},{"block_type":"element","block":"k6fwzr7o","search_text":"const chalk = require('chalk'); const clear = require('clear'); const figlet = require('figlet'); ","text_count":98,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const chalk = require('chalk');\nconst clear = require('clear');\nconst figlet = require('figlet');"}]}]},{"block_type":"element","block":"k6fwzr7p","search_text":"Adding Some Helper Methods","text_count":26,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Adding Some Helper Methods"}]},{"block_type":"element","block":"k6fwzr7q","search_text":"We’re going to create a lib folder where we’ll split our helper code into modules:","text_count":82,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"We&rsquo;re going to create a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"lib"}]},{"block_type":"text","content":"folder where we&rsquo;ll split our helper code into modules:"}]},{"block_type":"element","block":"k6fwzr7r","search_text":"files.js : basic file management inquirer.js : command-line user interaction github.js : access token management repo.js : Git repository management ","text_count":149,"tag_name":"ul","attributes":{},"children":[{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"strong","attributes":{},"children":[{"block_type":"text","content":"files.js"}]},{"block_type":"text","content":": basic file management"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"strong","attributes":{},"children":[{"block_type":"text","content":"inquirer.js"}]},{"block_type":"text","content":": command-line user interaction"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"strong","attributes":{},"children":[{"block_type":"text","content":"github.js"}]},{"block_type":"text","content":": access token management"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"element","tag_name":"strong","attributes":{},"children":[{"block_type":"text","content":"repo.js"}]},{"block_type":"text","content":": Git repository management"}]}]},{"block_type":"element","block":"k6fwzr7s","search_text":"Let’s start with lib/files.js . Here, we need to:","text_count":49,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Let&rsquo;s start with"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"lib/files.js"}]},{"block_type":"text","content":". Here, we need to:"}]},{"block_type":"element","block":"k6fwzr7t","search_text":"get the current directory (to get a default repo name) check whether a directory exists (to determine whether the current folder is already a Git repository by looking for a folder named .git ) ","text_count":194,"tag_name":"ul","attributes":{},"children":[{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"get the current directory (to get a default repo name)"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"check whether a directory exists (to determine whether the current folder is already a Git repository by looking for a folder named"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".git"}]},{"block_type":"text","content":")"}]}]},{"block_type":"element","block":"k6fwzr7u","search_text":"This sounds straightforward, but there are a couple of gotchas to take into consideration.","text_count":90,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"This sounds straightforward, but there are a couple of gotchas to take into consideration."}]},{"block_type":"element","block":"k6fwzr7v","search_text":"Firstly, you might be tempted to use the fs module’s realpathSync method to get the current directory:","text_count":102,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Firstly, you might be tempted to use the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"fs"}]},{"block_type":"text","content":"module&rsquo;s"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://nodejs.org/api/fs.html#fs_fs_realpathsync_path_options"},"children":[{"block_type":"text","content":"realpathSync"}]},{"block_type":"text","content":"method to get the current directory:"}]},{"block_type":"element","block":"k6fwzr7w","search_text":"path.basename(path.dirname(fs.realpathSync(__filename))); ","text_count":58,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"path.basename(path.dirname(fs.realpathSync(__filename)));"}]}]},{"block_type":"element","block":"k6fwzr7x","search_text":"This will work when we’re calling the application from the same directory (for example, using node index.js ), but bear in mind that we’re going to be making our console application available globally. This means we’ll want the name of the directory we’re working in, not the directory where the application resides. For this purpose, it’s better to use process.cwd :","text_count":367,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"This will work when we&rsquo;re calling the application from the same directory (for example, using"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"node index.js"}]},{"block_type":"text","content":"), but bear in mind that we&rsquo;re going to be making our console application available globally. This means we&rsquo;ll want the name of the directory we&rsquo;re working in, not the directory where the application resides. For this purpose, it&rsquo;s better to use"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://nodejs.org/api/process.html#process_process_cwd"},"children":[{"block_type":"text","content":"process.cwd"}]},{"block_type":"text","content":":"}]},{"block_type":"element","block":"k6fwzr7y","search_text":"path.basename(process.cwd()); ","text_count":30,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"path.basename(process.cwd());"}]}]},{"block_type":"element","block":"k6fwzr7z","search_text":"Secondly, the preferred method of checking whether a file or directory exists keeps changing . The current way is to use existsSync . This returns","text_count":146,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Secondly, the preferred method of checking whether a file or directory exists"},{"block_type":"element","tag_name":"a","attributes":{"href":"http://stackoverflow.com/a/4482701"},"children":[{"block_type":"text","content":"keeps changing"}]},{"block_type":"text","content":". The current way is to use"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"existsSync"}]},{"block_type":"text","content":". This returns"}]},{"block_type":"element","block":"k6fwzr80","search_text":"true","text_count":4,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"true"}]}]},{"block_type":"element","block":"k6fwzr81","search_text":"if the path exists,","text_count":19,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"if the path exists,"}]},{"block_type":"element","block":"k6fwzr82","search_text":"false","text_count":5,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"false"}]}]},{"block_type":"text","content":"otherwise."},{"block_type":"element","block":"k6fwzr83","search_text":"Finally, it’s worth noting that when you’re writing a command-line application, using the synchronous version of these sorts of methods is just fine.","text_count":149,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Finally, it&rsquo;s worth noting that when you&rsquo;re writing a command-line application, using the synchronous version of these sorts of methods is just fine."}]},{"block_type":"element","block":"k6fwzr84","search_text":"Putting that all together, let’s create a utility package in lib/files.js :","text_count":75,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Putting that all together, let&rsquo;s create a utility package in"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"lib/files.js"}]},{"block_type":"text","content":":"}]},{"block_type":"element","block":"k6fwzr85","search_text":"const fs = require('fs'); const path = require('path'); module.exports = { getCurrentDirectoryBase: () => { return path.basename(process.cwd()); }, directoryExists: (filePath) => { return fs.existsSync(filePath); } }; ","text_count":218,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const fs = require('fs');\nconst path = require('path');\n\nmodule.exports = {\n  getCurrentDirectoryBase: () =&gt; {\n    return path.basename(process.cwd());\n  },\n\n  directoryExists: (filePath) =&gt; {\n    return fs.existsSync(filePath);\n  }\n};"}]}]},{"block_type":"element","block":"k6fwzr86","search_text":"Go back to index.js and ensure you require the new file:","text_count":56,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Go back to"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"index.js"}]},{"block_type":"text","content":"and ensure you"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"require"}]},{"block_type":"text","content":"the new file:"}]},{"block_type":"element","block":"k6fwzr87","search_text":"const files = require('./lib/files'); ","text_count":38,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const files = require('./lib/files');"}]}]},{"block_type":"element","block":"k6fwzr88","search_text":"With this in place, we can start developing the application.","text_count":60,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"With this in place, we can start developing the application."}]},{"block_type":"element","block":"k6fwzr89","search_text":"Initializing the Node CLI","text_count":25,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Initializing the Node CLI"}]},{"block_type":"element","block":"k6fwzr8a","search_text":"Now let’s implement the start-up phase of our console application.","text_count":66,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Now let&rsquo;s implement the start-up phase of our console application."}]},{"block_type":"element","block":"k6fwzr8b","search_text":"In order to demonstrate some of the packages we’ve installed to enhance the console output, let’s clear the screen and then display a banner:","text_count":141,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"In order to demonstrate some of the packages we&rsquo;ve installed to enhance the console output, let&rsquo;s clear the screen and then display a banner:"}]},{"block_type":"element","block":"k6fwzr8c","search_text":"// index.js clear(); console.log( chalk.yellow( figlet.textSync('Ginit', { horizontalLayout: 'full' }) ) ); ","text_count":108,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"// index.js\n\nclear();\n\nconsole.log(\n  chalk.yellow(\n    figlet.textSync('Ginit', { horizontalLayout: 'full' })\n  )\n);"}]}]},{"block_type":"element","block":"k6fwzr8d","search_text":"You can run the application using node index.js . The output from this is shown below.","text_count":86,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"You can run the application using"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"node index.js"}]},{"block_type":"text","content":". The output from this is shown below."}]},{"block_type":"element","block":"k6fwzr8e","search_text":"","text_count":0,"tag_name":"p","attributes":{"class":"f-center"},"children":[{"block_type":"element","tag_name":"img","attributes":{"src":"https://learnable-static.s3.amazonaws.com/premium/reeedr/books/build-a-javascript-command-line-interface-cli-with-node-js/images/ginit-logo.png","alt":"The welcome banner on our Node CLI, created using Chalk and Figlet","class":"lazyload"},"children":[]}]},{"block_type":"element","block":"k6fwzr8f","search_text":"Next up, let’s run a simple check to ensure that the current folder isn’t already a Git repository. That’s easy: we just check for the existence of a .git folder using the utility method we just created:","text_count":203,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Next up, let&rsquo;s run a simple check to ensure that the current folder isn&rsquo;t already a Git repository. That&rsquo;s easy: we just check for the existence of a"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":".git"}]},{"block_type":"text","content":"folder using the utility method we just created:"}]},{"block_type":"element","block":"k6fwzr8g","search_text":"//index.js if (files.directoryExists('.git')) { console.log(chalk.red('Already a Git repository!')); process.exit(); } ","text_count":119,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"//index.js\n\nif (files.directoryExists('.git')) {\n  console.log(chalk.red('Already a Git repository!'));\n  process.exit();\n}"}]}]},{"block_type":"element","block":"k6fwzr8h","search_text":"Chalk Module","text_count":12,"tag_name":"h4","attributes":{},"children":[{"block_type":"text","content":"Chalk Module"}]},{"block_type":"element","block":"k6fwzr8i","search_text":"Notice we’re using the chalk module to show a red-colored message.","text_count":66,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Notice we&rsquo;re using the"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/chalk"},"children":[{"block_type":"text","content":"chalk module"}]},{"block_type":"text","content":"to show a red-colored message."}]},{"block_type":"element","block":"k6fwzr8j","search_text":"Prompting the User for Input","text_count":28,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Prompting the User for Input"}]},{"block_type":"element","block":"k6fwzr8k","search_text":"The next thing we need to do is create a function that will prompt the user for their GitHub credentials.","text_count":105,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"The next thing we need to do is create a function that will prompt the user for their GitHub credentials."}]},{"block_type":"element","block":"k6fwzr8l","search_text":"We can use Inquirer for this. The module includes a number of methods for various types of prompts, which are roughly analogous to HTML form controls. In order to collect the user’s GitHub username and password, we’re going to use the input and password types respectively.","text_count":273,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"We can use"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/inquirer"},"children":[{"block_type":"text","content":"Inquirer"}]},{"block_type":"text","content":"for this. The module includes a number of methods for various types of prompts, which are roughly analogous to HTML form controls. In order to collect the user&rsquo;s GitHub username and password, we&rsquo;re going to use the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"input"}]},{"block_type":"text","content":"and"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"password"}]},{"block_type":"text","content":"types respectively."}]},{"block_type":"element","block":"k6fwzr8m","search_text":"First, create lib/inquirer.js and insert this code:","text_count":51,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"First, create"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"lib/inquirer.js"}]},{"block_type":"text","content":"and insert this code:"}]},{"block_type":"element","block":"k6fwzr8n","search_text":"const inquirer = require('inquirer'); module.exports = { askGithubCredentials: () => { const questions = [ { name: 'username', type: 'input', message: 'Enter your GitHub username or e-mail address:', validate: function( value ) { if (value.length) { return true; } else { return 'Please enter your username or e-mail address.'; } } }, { name: 'password', type: 'password', message: 'Enter your password:', validate: function(value) { if (value.length) { return true; } else { return 'Please enter your password.'; } } } ]; return inquirer.prompt(questions); }, }; ","text_count":564,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const inquirer = require('inquirer');\n\nmodule.exports = {\n  askGithubCredentials: () =&gt; {\n    const questions = [\n      {\n        name: 'username',\n        type: 'input',\n        message: 'Enter your GitHub username or e-mail address:',\n        validate: function( value ) {\n          if (value.length) {\n            return true;\n          } else {\n            return 'Please enter your username or e-mail address.';\n          }\n        }\n      },\n      {\n        name: 'password',\n        type: 'password',\n        message: 'Enter your password:',\n        validate: function(value) {\n          if (value.length) {\n            return true;\n          } else {\n            return 'Please enter your password.';\n          }\n        }\n      }\n    ];\n    return inquirer.prompt(questions);\n  },\n};"}]}]},{"block_type":"element","block":"k6fwzr8o","search_text":"As you can see, inquirer.prompt() asks the user a series of questions, provided in the form of an array as the first argument. Each question is made up of an object which defines the name of the field, the type (we’re just using input and password respectively here, but later we’ll look at a more advanced example), and the prompt ( message ) to displaThe input the user provides will be passed in to the calling function as a Promise . If successful, we’ll end up with a simple object with two properties— username and password You can test all of this out by adding the following to index.js :","text_count":596,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"As you can see,"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"inquirer.prompt()"}]},{"block_type":"text","content":"asks the user a series of questions, provided in the form of an array as the first argument. Each question is made up of an object which defines the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"name"}]},{"block_type":"text","content":"of the field, the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"type"}]},{"block_type":"text","content":"(we&rsquo;re just using"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"input"}]},{"block_type":"text","content":"and"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"password"}]},{"block_type":"text","content":"respectively here, but later we&rsquo;ll look at a more advanced example), and the prompt ("},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"message"}]},{"block_type":"text","content":") to displaThe input the user provides will be passed in to the calling function as a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"Promise"}]},{"block_type":"text","content":". If successful, we&rsquo;ll end up with a simple object with two properties&mdash;"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"username"}]},{"block_type":"text","content":"and"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"password"}]},{"block_type":"text","content":"You can test all of this out by adding the following to"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"index.js"}]},{"block_type":"text","content":":"}]},{"block_type":"element","block":"k6fwzr8p","search_text":"const inquirer = require('./lib/inquirer'); const run = async () => { const credentials = await inquirer.askGithubCredentials(); console.log(credentials); }; run(); ","text_count":165,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const inquirer  = require('./lib/inquirer');\n\nconst run = async () =&gt; {\n  const credentials = await inquirer.askGithubCredentials();\n  console.log(credentials);\n};\n\nrun();"}]}]},{"block_type":"element","block":"k6fwzr8q","search_text":"Then run the script using node index.js .","text_count":41,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Then run the script using"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"node index.js"}]},{"block_type":"text","content":"."}]},{"block_type":"element","block":"k6fwzr8r","search_text":"","text_count":0,"tag_name":"p","attributes":{"class":"f-center"},"children":[{"block_type":"element","tag_name":"img","attributes":{"src":"https://learnable-static.s3.amazonaws.com/premium/reeedr/books/build-a-javascript-command-line-interface-cli-with-node-js/images/prompting-the-user-for-input.png","alt":"Getting user input with Inquirer","class":"lazyload"},"children":[]}]},{"block_type":"element","block":"k6fwzr8s","search_text":"After Testing","text_count":13,"tag_name":"h4","attributes":{},"children":[{"block_type":"text","content":"After Testing"}]},{"block_type":"element","block":"k6fwzr8t","search_text":"When you’re done testing, don’t forget to remove the line","text_count":57,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"When you&rsquo;re done testing, don&rsquo;t forget to remove the line"}]},{"block_type":"element","block":"k6fwzr8u","search_text":"const inquirer = require('./lib/inquirer');","text_count":43,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const inquirer  = require('./lib/inquirer');"}]}]},{"block_type":"element","block":"k6fwzr8v","search_text":"from index.js , as we won’t actually need it in this file.","text_count":58,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"from"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"index.js"}]},{"block_type":"text","content":", as we won&rsquo;t actually need it in this file."}]},{"block_type":"element","block":"k6fwzr8w","search_text":"Dealing With GitHub Authentication","text_count":34,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Dealing With GitHub Authentication"}]},{"block_type":"element","block":"k6fwzr8x","search_text":"The next step is to create a function to retrieve an OAuth token for the GitHub API. Essentially, we’re going to “exchange” the username and password for a token.","text_count":162,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"The next step is to create a function to retrieve an OAuth token for the GitHub API. Essentially, we&rsquo;re going to &ldquo;exchange&rdquo; the username and password for a token."}]},{"block_type":"element","block":"k6fwzr8y","search_text":"Of course, we don’t want users to have to enter their credentials every time they use the tool. Instead, we’ll store the OAuth token for subsequent requests. This is where the configstore package comes in.","text_count":205,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Of course, we don&rsquo;t want users to have to enter their credentials every time they use the tool. Instead, we&rsquo;ll store the OAuth token for subsequent requests. This is where the"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/configstore"},"children":[{"block_type":"text","content":"configstore"}]},{"block_type":"text","content":"package comes in."}]},{"block_type":"element","block":"k6fwzr8z","search_text":"Storing Config","text_count":14,"tag_name":"h3","attributes":{},"children":[{"block_type":"text","content":"Storing Config"}]},{"block_type":"element","block":"k6fwzr90","search_text":"Storing config is outwardly quite straightforward: you can simply read and write to/from a JSON file without the need for a third-party package. However, the configstore package provides a few key advantages:","text_count":208,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Storing config is outwardly quite straightforward: you can simply read and write to/from a JSON file without the need for a third-party package. However, the configstore package provides a few key advantages:"}]},{"block_type":"element","block":"k6fwzr91","search_text":"It determines the most appropriate location for the file for you, taking into account your operating system and the current user. There’s no need to explicitly read or write to the file. You simply modify a configstore object and that’s taken care of for you in the background. ","text_count":278,"tag_name":"ol","attributes":{},"children":[{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"It determines the most appropriate location for the file for you, taking into account your operating system and the current user."}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"There&rsquo;s no need to explicitly read or write to the file. You simply modify a configstore object and that&rsquo;s taken care of for you in the background."}]}]},{"block_type":"element","block":"k6fwzr92","search_text":"To use it, simply create an instance, passing it an application identifier. For example:","text_count":88,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"To use it, simply create an instance, passing it an application identifier. For example:"}]},{"block_type":"element","block":"k6fwzr93","search_text":"const Configstore = require('configstore'); const conf = new Configstore('ginit'); ","text_count":83,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const Configstore = require('configstore');\nconst conf = new Configstore('ginit');"}]}]},{"block_type":"element","block":"k6fwzr94","search_text":"If the configstore file doesn’t exist, it’ll return an empty object and create the file in the background. If there’s already a configstore file, the contents will be made available to your application. You can now use conf as a simple object, getting or setting properties as required. As mentioned above, you don’t need to worry about saving it afterwards. That gets taken care of for you.","text_count":391,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"If the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"configstore"}]},{"block_type":"text","content":"file doesn&rsquo;t exist, it&rsquo;ll return an empty object and create the file in the background. If there&rsquo;s already a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"configstore"}]},{"block_type":"text","content":"file, the contents will be made available to your application. You can now use"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"conf"}]},{"block_type":"text","content":"as a simple object, getting or setting properties as required. As mentioned above, you don&rsquo;t need to worry about saving it afterwards. That gets taken care of for you."}]},{"block_type":"element","block":"k6fwzr95","search_text":"Finding the File","text_count":16,"tag_name":"h4","attributes":{},"children":[{"block_type":"text","content":"Finding the File"}]},{"block_type":"element","block":"k6fwzr96","search_text":"On macOS, you’ll find the file in","text_count":33,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"On macOS, you&rsquo;ll find the file in"}]},{"block_type":"element","block":"k6fwzr97","search_text":"/Users/[YOUR-USERNME]/.config/configstore/ginit.json","text_count":52,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"/Users/[YOUR-USERNME]/.config/configstore/ginit.json"}]}]},{"block_type":"element","block":"k6fwzr98","search_text":"On Linux, it’s in","text_count":17,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"On Linux, it&rsquo;s in"}]},{"block_type":"element","block":"k6fwzr99","search_text":"/home/[YOUR-USERNME]/.config/configstore/ginit.json","text_count":51,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"/home/[YOUR-USERNME]/.config/configstore/ginit.json"}]}]},{"block_type":"element","block":"k6fwzr9a","search_text":"Communicating with the GitHub API","text_count":33,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Communicating with the GitHub API"}]},{"block_type":"element","block":"k6fwzr9b","search_text":"Let’s create a library for handling the GitHub token. Create the file","text_count":69,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Let&rsquo;s create a library for handling the GitHub token. Create the file"}]},{"block_type":"element","block":"k6fwzr9c","search_text":"lib/github.js","text_count":13,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"lib/github.js"}]}]},{"block_type":"element","block":"k6fwzr9d","search_text":"and place the following code inside it:","text_count":39,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"and place the following code inside it:"}]},{"block_type":"element","block":"k6fwzr9e","search_text":"const CLI = require('clui'); const Configstore = require('configstore'); const Octokit = require('@octokit/rest'); const Spinner = CLI.Spinner; const { createBasicAuth } = require(\"@octokit/auth-basic\"); const inquirer = require('./inquirer'); const pkg = require('../package.json'); const conf = new Configstore(pkg.name); ","text_count":324,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const CLI = require('clui');\nconst Configstore = require('configstore');\nconst Octokit = require('@octokit/rest');\nconst Spinner = CLI.Spinner;\nconst { createBasicAuth } = require(\"@octokit/auth-basic\");\n\nconst inquirer = require('./inquirer');\nconst pkg = require('../package.json');\n\nconst conf = new Configstore(pkg.name);"}]}]},{"block_type":"element","block":"k6fwzr9f","search_text":"Now let’s add the function that checks whether we’ve already got an access token. We’ll also add a function that allows other libs to access octokit (GitHub) functions:","text_count":168,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Now let&rsquo;s add the function that checks whether we&rsquo;ve already got an access token. We&rsquo;ll also add a function that allows other libs to access"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"octokit"}]},{"block_type":"text","content":"(GitHub) functions:"}]},{"block_type":"element","block":"k6fwzr9g","search_text":"let octokit; module.exports = { getInstance: () => { return octokit; }, getStoredGithubToken: () => { return conf.get('github.token'); }, }; ","text_count":141,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"let octokit;\n\nmodule.exports = {\n  getInstance: () =&gt; {\n    return octokit;\n  },\n\n  getStoredGithubToken: () =&gt; {\n    return conf.get('github.token');\n  },\n};"}]}]},{"block_type":"element","block":"k6fwzr9h","search_text":"If a conf object exists and it has github.token property, this means that there’s already a token in storage. In this case, we return the token value back to the invoking function. We’ll get to that later on.","text_count":208,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"If a"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"conf"}]},{"block_type":"text","content":"object exists and it has"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"github.token"}]},{"block_type":"text","content":"property, this means that there&rsquo;s already a token in storage. In this case, we return the token value back to the invoking function. We&rsquo;ll get to that later on."}]},{"block_type":"element","block":"k6fwzr9i","search_text":"If no token is detected, we need to fetch one. Of course, getting an OAuth token involves a network request, which means a short wait for the user. This gives us an opportunity to look at the clui package which provides some enhancements for console-based applications, among them an animated spinner.","text_count":301,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"If no token is detected, we need to fetch one. Of course, getting an OAuth token involves a network request, which means a short wait for the user. This gives us an opportunity to look at the"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/clui"},"children":[{"block_type":"text","content":"clui"}]},{"block_type":"text","content":"package which provides some enhancements for console-based applications, among them an animated spinner."}]},{"block_type":"element","block":"k6fwzr9j","search_text":"Creating a spinner is easy:","text_count":27,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Creating a spinner is easy:"}]},{"block_type":"element","block":"k6fwzr9k","search_text":"const status = new Spinner('Authenticating you, please wait...'); status.start(); ","text_count":82,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const status = new Spinner('Authenticating you, please wait...');\nstatus.start();"}]}]},{"block_type":"element","block":"k6fwzr9l","search_text":"Once you’re done, simply stop it and it will disappear from the screen:","text_count":71,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Once you&rsquo;re done, simply stop it and it will disappear from the screen:"}]},{"block_type":"element","block":"k6fwzr9m","search_text":"status.stop(); ","text_count":15,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"status.stop();"}]}]},{"block_type":"element","block":"k6fwzr9n","search_text":"Setting the Caption Dynamically","text_count":31,"tag_name":"h4","attributes":{},"children":[{"block_type":"text","content":"Setting the Caption Dynamically"}]},{"block_type":"element","block":"k6fwzr9o","search_text":"You can also set the caption dynamically using the update method. This could be useful if you have some indication of progress—for example, displaying the percentage complete.","text_count":175,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"You can also set the caption dynamically using the"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"update"}]},{"block_type":"text","content":"method. This could be useful if you have some indication of progress&mdash;for example, displaying the percentage complete."}]},{"block_type":"element","block":"k6fwzr9p","search_text":"Here’s the code to authenticate with GitHub:","text_count":44,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Here&rsquo;s the code to authenticate with GitHub:"}]},{"block_type":"element","block":"k6fwzr9q","search_text":"module.exports = { getInstance: () => { ... }, getStoredGithubToken: () => { ... }, getPersonalAccesToken: async () => { const credentials = await inquirer.askGithubCredentials(); const status = new Spinner('Authenticating you, please wait...'); status.start(); const auth = createBasicAuth({ username: credentials.username, password: credentials.password, async on2Fa() { // TBD }, token: { scopes: ['user', 'public_repo', 'repo', 'repo:status'], note: 'ginit, the command-line tool for initalizing Git repos' } }); try { const res = await auth(); if(res.token) { conf.set('github.token', res.token); return res.token; } else { throw new Error(\"GitHub token was not found in the response\"); } } finally { status.stop(); } }, }; ","text_count":729,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"module.exports = {\n  getInstance: () =&gt; { ... },\n  getStoredGithubToken: () =&gt; { ... },\n\n  getPersonalAccesToken: async () =&gt; {\n    const credentials = await inquirer.askGithubCredentials();\n    const status = new Spinner('Authenticating you, please wait...');\n\n    status.start();\n\n    const auth = createBasicAuth({\n      username: credentials.username,\n      password: credentials.password,\n      async on2Fa() {\n        // TBD\n      },\n      token: {\n        scopes: ['user', 'public_repo', 'repo', 'repo:status'],\n        note: 'ginit, the command-line tool for initalizing Git repos'\n      }\n    });\n\n    try {\n      const res = await auth();\n\n      if(res.token) {\n        conf.set('github.token', res.token);\n        return res.token;\n      } else {\n        throw new Error(\"GitHub token was not found in the response\");\n      }\n    } finally {\n      status.stop();\n    }\n  },\n};"}]}]},{"block_type":"element","block":"k6fwzr9r","search_text":"Let’s step through this:","text_count":24,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Let&rsquo;s step through this:"}]},{"block_type":"element","block":"k6fwzr9s","search_text":"We prompt the user for their credentials using the askGithubCredentials method we defined earlier. We use the createBasicAuth method to create an auth function, which we’ll call in the next step. We pass the user’s username and password to this method, as well as a token object with two properties: note , a note to remind us what the OAuth token is for, and scopes , a list of scopes that this authorization is in. You can read more about available scopes in GitHub’s documentation. We then await the result of calling the auth function inside a try block. If authentication is successful and a token is present in the response, we set it in the configstore for next time and return the token. If the token is missing, or authentication doesn’t succeed for whatever reason, the error will bubble on up the stack so that we can catch it in index.js . We’ll implement this functionality later. ","text_count":894,"tag_name":"ol","attributes":{},"children":[{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"We prompt the user for their credentials using the"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"askGithubCredentials"}]},{"block_type":"text","content":"method we defined earlier."}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"We use the"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/@octokit/auth-basic?activeTab=readme#createbasicauthtoken-options"},"children":[{"block_type":"text","content":"createBasicAuth"}]},{"block_type":"text","content":"method to create an"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"auth"}]},{"block_type":"text","content":"function, which we&rsquo;ll call in the next step. We pass the user&rsquo;s username and password to this method, as well as a token object with two properties:"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"note"}]},{"block_type":"text","content":", a note to remind us what the OAuth token is for, and"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"scopes"}]},{"block_type":"text","content":", a list of scopes that this authorization is in. You can read"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/#available-scopes"},"children":[{"block_type":"text","content":"more about available scopes"}]},{"block_type":"text","content":"in GitHub&rsquo;s documentation."}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"We then"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"await"}]},{"block_type":"text","content":"the result of calling the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"auth"}]},{"block_type":"text","content":"function inside a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"try"}]},{"block_type":"text","content":"block."}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"If authentication is successful and a token is present in the response, we set it in the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"configstore"}]},{"block_type":"text","content":"for next time and return the token."}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"If the token is missing, or authentication doesn&rsquo;t succeed for whatever reason, the error will bubble on up the stack so that we can catch it in"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"index.js"}]},{"block_type":"text","content":". We&rsquo;ll implement this functionality later."}]}]},{"block_type":"element","block":"k6fwzr9t","search_text":"Any access tokens you create, whether manually or via the API as we’re doing here, you’ll be able to see them here . During the course of development, you may find you need to delete ginit’s access token—identifiable by the note parameter supplied above—so that you can re-generate it.","text_count":285,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Any access tokens you create, whether manually or via the API as we&rsquo;re doing here, you&rsquo;ll be able to"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://github.com/settings/tokens"},"children":[{"block_type":"text","content":"see them here"}]},{"block_type":"text","content":". During the course of development, you may find you need to delete ginit&rsquo;s access token&mdash;identifiable by the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"note"}]},{"block_type":"text","content":"parameter supplied above&mdash;so that you can re-generate it."}]},{"block_type":"element","block":"k6fwzr9u","search_text":"If you’ve been following along and would like to try out what we have so far, you can update index.js as follows:","text_count":113,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"If you&rsquo;ve been following along and would like to try out what we have so far, you can update"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"index.js"}]},{"block_type":"text","content":"as follows:"}]},{"block_type":"element","block":"k6fwzr9v","search_text":"const github = require('./lib/github'); ... const run = async () => { let token = github.getStoredGithubToken(); if(!token) { token = await github.getPersonalAccesToken(); } console.log(token); }; ","text_count":197,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const github = require('./lib/github');\n\n...\n\nconst run = async () =&gt; {\n  let token = github.getStoredGithubToken();\n  if(!token) {\n    token = await github.getPersonalAccesToken();\n  }\n  console.log(token);\n};"}]}]},{"block_type":"element","block":"k6fwzr9w","search_text":"The first time you run it, you should be prompted for your username and GitHub password. The app should then create a personal access token on GitHub and save the token to the configstore , before logging it to the console. Every time you run the app after that, the app will pull the token straight from the configstore and log that to the screen.","text_count":348,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"The first time you run it, you should be prompted for your username and GitHub password. The app should then create a personal access token on GitHub and save the token to the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"configstore"}]},{"block_type":"text","content":", before logging it to the console. Every time you run the app after that, the app will pull the token straight from the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"configstore"}]},{"block_type":"text","content":"and log that to the screen."}]},{"block_type":"element","block":"k6fwzr9x","search_text":"Dealing with Two-factor Authentication","text_count":38,"tag_name":"h3","attributes":{},"children":[{"block_type":"text","content":"Dealing with Two-factor Authentication"}]},{"block_type":"element","block":"k6fwzr9y","search_text":"Hopefully you noticed the on2Fa method in the code above. This will be called when a user has two-factor authentication enabled on their GitHub account. Let’s fill that out now:","text_count":177,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Hopefully you noticed the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"on2Fa"}]},{"block_type":"text","content":"method in the code above. This will be called when a user has two-factor authentication enabled on their GitHub account. Let&rsquo;s fill that out now:"}]},{"block_type":"element","block":"k6fwzr9z","search_text":"// inquirer.js const inquirer = require('inquirer'); module.exports = { askGithubCredentials: () => { ... }, getTwoFactorAuthenticationCode: () => { return inquirer.prompt({ name: 'twoFactorAuthenticationCode', type: 'input', message: 'Enter your two-factor authentication code:', validate: function(value) { if (value.length) { return true; } else { return 'Please enter your two-factor authentication code.'; } } }); }, }; ","text_count":425,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"// inquirer.js\n\nconst inquirer = require('inquirer');\n\nmodule.exports = {\n  askGithubCredentials: () =&gt; { ... },\n\n  getTwoFactorAuthenticationCode: () =&gt; {\n    return inquirer.prompt({\n      name: 'twoFactorAuthenticationCode',\n      type: 'input',\n      message: 'Enter your two-factor authentication code:',\n      validate: function(value) {\n        if (value.length) {\n          return true;\n        } else {\n          return 'Please enter your two-factor authentication code.';\n        }\n      }\n    });\n  },\n};"}]}]},{"block_type":"element","block":"k6fwzra0","search_text":"We can call the getTwoFactorAuthenticationCode method from within the on2Fa method, like so:","text_count":92,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"We can call the"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"getTwoFactorAuthenticationCode"}]},{"block_type":"text","content":"method from within the"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"on2Fa"}]},{"block_type":"text","content":"method, like so:"}]},{"block_type":"element","block":"k6fwzra1","search_text":"// github.js async on2Fa() { status.stop(); const res = await inquirer.getTwoFactorAuthenticationCode(); status.start(); return res.twoFactorAuthenticationCode; }, ","text_count":164,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"// github.js\n\nasync on2Fa() {\n  status.stop();\n  const res = await inquirer.getTwoFactorAuthenticationCode();\n  status.start();\n  return res.twoFactorAuthenticationCode;\n},"}]}]},{"block_type":"element","block":"k6fwzra2","search_text":"And now our app can handle GitHub accounts with two-factor authentication enabled.","text_count":82,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"And now our app can handle GitHub accounts with two-factor authentication enabled."}]},{"block_type":"element","block":"k6fwzra3","search_text":"Creating a Repository","text_count":21,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Creating a Repository"}]},{"block_type":"element","block":"k6fwzra4","search_text":"Once we’ve got an OAuth token, we can use it to create a remote repository with GitHub.","text_count":87,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Once we&rsquo;ve got an OAuth token, we can use it to create a remote repository with GitHub."}]},{"block_type":"element","block":"k6fwzra5","search_text":"Again, we can use Inquirer to ask a series of questions. We need a name for the repo, we’ll ask for an optional description, and we also need to know whether it should be public or private.","text_count":189,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Again, we can use Inquirer to ask a series of questions. We need a name for the repo, we&rsquo;ll ask for an optional description, and we also need to know whether it should be public or private."}]},{"block_type":"element","block":"k6fwzra6","search_text":"We’ll use minimist to grab defaults for the name and description from optional command-line arguments. For example:","text_count":115,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"We&rsquo;ll use"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/minimist"},"children":[{"block_type":"text","content":"minimist"}]},{"block_type":"text","content":"to grab defaults for the name and description from optional command-line arguments. For example:"}]},{"block_type":"element","block":"k6fwzra7","search_text":"ginit my-repo \"just a test repository\" ","text_count":39,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"ginit my-repo \"just a test repository\""}]}]},{"block_type":"element","block":"k6fwzra8","search_text":"This will set the default name to my-repo and the description to just a test repository .","text_count":89,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"This will set the default name to"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"my-repo"}]},{"block_type":"text","content":"and the description to"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"just a test repository"}]},{"block_type":"text","content":"."}]},{"block_type":"element","block":"k6fwzra9","search_text":"The following line will place the arguments in an array indexed by an underscore:","text_count":81,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"The following line will place the arguments in an array indexed by an underscore:"}]},{"block_type":"element","block":"k6fwzraa","search_text":"const argv = require('minimist')(process.argv.slice(2)); // { _: [ 'my-repo', 'just a test repository' ] } ","text_count":107,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const argv = require('minimist')(process.argv.slice(2));\n// { _: [ 'my-repo', 'just a test repository' ] }"}]}]},{"block_type":"element","block":"k6fwzrab","search_text":"There’s More to minimist","text_count":24,"tag_name":"h4","attributes":{},"children":[{"block_type":"text","content":"There&rsquo;s More to minimist"}]},{"block_type":"element","block":"k6fwzrac","search_text":"This only really scratches the surface of the minimist package. You can also use it to interpret flags, switches and name/value pairs. Check out the documentation for more information.","text_count":184,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"This only really scratches the surface of the minimist package. You can also use it to interpret flags, switches and name/value pairs. Check out the documentation for more information."}]},{"block_type":"element","block":"k6fwzrad","search_text":"We’ll write code to parse the command-line arguments and ask a series of questions. First, update lib/inquirer.js as follows:","text_count":125,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"We&rsquo;ll write code to parse the command-line arguments and ask a series of questions. First, update"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"lib/inquirer.js"}]},{"block_type":"text","content":"as follows:"}]},{"block_type":"element","block":"k6fwzrae","search_text":"const inquirer = require('inquirer'); const files = require('./files'); module.exports = { askGithubCredentials: () => { ... }, getTwoFactorAuthenticationCode: () => { ... }, askRepoDetails: () => { const argv = require('minimist')(process.argv.slice(2)); const questions = [ { type: 'input', name: 'name', message: 'Enter a name for the repository:', default: argv._[0] || files.getCurrentDirectoryBase(), validate: function( value ) { if (value.length) { return true; } else { return 'Please enter a name for the repository.'; } } }, { type: 'input', name: 'description', default: argv._[1] || null, message: 'Optionally enter a description of the repository:' }, { type: 'list', name: 'visibility', message: 'Public or private:', choices: [ 'public', 'private' ], default: 'public' } ]; return inquirer.prompt(questions); }, }; ","text_count":831,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const inquirer = require('inquirer');\nconst files = require('./files');\n\nmodule.exports = {\n  askGithubCredentials: () =&gt; { ... },\n  getTwoFactorAuthenticationCode: () =&gt; { ... },\n\n  askRepoDetails: () =&gt; {\n    const argv = require('minimist')(process.argv.slice(2));\n\n    const questions = [\n      {\n        type: 'input',\n        name: 'name',\n        message: 'Enter a name for the repository:',\n        default: argv._[0] || files.getCurrentDirectoryBase(),\n        validate: function( value ) {\n          if (value.length) {\n            return true;\n          } else {\n            return 'Please enter a name for the repository.';\n          }\n        }\n      },\n      {\n        type: 'input',\n        name: 'description',\n        default: argv._[1] || null,\n        message: 'Optionally enter a description of the repository:'\n      },\n      {\n        type: 'list',\n        name: 'visibility',\n        message: 'Public or private:',\n        choices: [ 'public', 'private' ],\n        default: 'public'\n      }\n    ];\n    return inquirer.prompt(questions);\n  },\n};"}]}]},{"block_type":"element","block":"k6fwzraf","search_text":"Next, create the file lib/repo.js and add this code:","text_count":52,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Next, create the file"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"lib/repo.js"}]},{"block_type":"text","content":"and add this code:"}]},{"block_type":"element","block":"k6fwzrag","search_text":"const CLI = require('clui'); const fs = require('fs'); const git = require('simple-git/promise')(); const Spinner = CLI.Spinner; const touch = require(\"touch\"); const _ = require('lodash'); const inquirer = require('./inquirer'); const gh = require('./github'); module.exports = { createRemoteRepo: async () => { const github = gh.getInstance(); const answers = await inquirer.askRepoDetails(); const data = { name: answers.name, description: answers.description, private: (answers.visibility === 'private') }; const status = new Spinner('Creating remote repository...'); status.start(); try { const response = await github.repos.createForAuthenticatedUser(data); return response.data.ssh_url; } finally { status.stop(); } }, }; ","text_count":729,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const CLI = require('clui');\nconst fs = require('fs');\nconst git = require('simple-git/promise')();\nconst Spinner = CLI.Spinner;\nconst touch = require(\"touch\");\nconst _ = require('lodash');\n\nconst inquirer = require('./inquirer');\nconst gh = require('./github');\n\nmodule.exports = {\n  createRemoteRepo: async () =&gt; {\n    const github = gh.getInstance();\n    const answers = await inquirer.askRepoDetails();\n\n    const data = {\n      name: answers.name,\n      description: answers.description,\n      private: (answers.visibility === 'private')\n    };\n\n    const status = new Spinner('Creating remote repository...');\n    status.start();\n\n    try {\n      const response = await github.repos.createForAuthenticatedUser(data);\n      return response.data.ssh_url;\n    } finally {\n      status.stop();\n    }\n  },\n};"}]}]},{"block_type":"element","block":"k6fwzrah","search_text":"Once we have that information, we can simply use the GitHub package to create a repo , which will give us a URL for the newly created repository. We can then set that up as a remote in our local Git repository. First, however, let’s interactively create a .gitignore file.","text_count":272,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Once we have that information, we can simply use the GitHub package to"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://octokit.github.io/rest.js/#octokit-routes-repos-create-for-authenticated-user"},"children":[{"block_type":"text","content":"create a repo"}]},{"block_type":"text","content":", which will give us a URL for the newly created repository. We can then set that up as a remote in our local Git repository. First, however, let&rsquo;s interactively create a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".gitignore"}]},{"block_type":"text","content":"file."}]},{"block_type":"element","block":"k6fwzrai","search_text":"Creating a .gitignore File","text_count":26,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Creating a .gitignore File"}]},{"block_type":"element","block":"k6fwzraj","search_text":"For the next step, we’ll create a simple command-line “wizard” to generate a .gitignore file. If the user is running our application in an existing project directory, let’s show them a list of files and directories already in the current working directory, and allow them to select which ones to ignore.","text_count":303,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"For the next step, we&rsquo;ll create a simple command-line &ldquo;wizard&rdquo; to generate a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".gitignore"}]},{"block_type":"text","content":"file. If the user is running our application in an existing project directory, let&rsquo;s show them a list of files and directories already in the current working directory, and allow them to select which ones to ignore."}]},{"block_type":"element","block":"k6fwzrak","search_text":"The Inquirer package provides a checkbox input type for just that.","text_count":66,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"The Inquirer package provides a"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"checkbox"}]},{"block_type":"text","content":"input type for just that."}]},{"block_type":"element","block":"k6fwzral","search_text":"","text_count":0,"tag_name":"p","attributes":{"class":"f-center"},"children":[{"block_type":"element","tag_name":"img","attributes":{"src":"https://learnable-static.s3.amazonaws.com/premium/reeedr/books/build-a-javascript-command-line-interface-cli-with-node-js/images/inquirers-checkboxes.png","alt":"Inquirer&rsquo;s checkboxes in action","class":"lazyload"},"children":[]}]},{"block_type":"element","block":"k6fwzram","search_text":"The first thing we need to do is scan the current directory, ignoring the .git folder and any existing .gitignore file (we do this by making use of lodash’s without method):","text_count":173,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"The first thing we need to do is scan the current directory, ignoring the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".git"}]},{"block_type":"text","content":"folder and any existing"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".gitignore"}]},{"block_type":"text","content":"file (we do this by making use of lodash&rsquo;s"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://lodash.com/docs#without"},"children":[{"block_type":"text","content":"without"}]},{"block_type":"text","content":"method):"}]},{"block_type":"element","block":"k6fwzran","search_text":"const filelist = _.without(fs.readdirSync('.'), '.git', '.gitignore'); ","text_count":71,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const filelist = _.without(fs.readdirSync('.'), '.git', '.gitignore');"}]}]},{"block_type":"element","block":"k6fwzrao","search_text":"If there’s nothing to add, there’s no point in continuing, so let’s simply touch the current .gitignore file and bail out of the function:","text_count":138,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"If there&rsquo;s nothing to add, there&rsquo;s no point in continuing, so let&rsquo;s simply"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"touch"}]},{"block_type":"text","content":"the current"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".gitignore"}]},{"block_type":"text","content":"file and bail out of the function:"}]},{"block_type":"element","block":"k6fwzrap","search_text":"if (filelist.length) { ... } else { touch('.gitignore'); } ","text_count":59,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"if (filelist.length) {\n  ...\n} else {\n  touch('.gitignore');\n}"}]}]},{"block_type":"element","block":"k6fwzraq","search_text":"Finally, let’s utilize Inquirer’s checkbox “widget” to list the files. Insert the following code in lib/inquirer.js :","text_count":117,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Finally, let&rsquo;s utilize Inquirer&rsquo;s checkbox &ldquo;widget&rdquo; to list the files. Insert the following code in"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"lib/inquirer.js"}]},{"block_type":"text","content":":"}]},{"block_type":"element","block":"k6fwzrar","search_text":"askIgnoreFiles: (filelist) => { const questions = [ { type: 'checkbox', name: 'ignore', message: 'Select the files and/or folders you wish to ignore:', choices: filelist, default: ['node_modules', 'bower_components'] } ]; return inquirer.prompt(questions); }, ","text_count":260,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"askIgnoreFiles: (filelist) =&gt; {\n  const questions = [\n    {\n      type: 'checkbox',\n      name: 'ignore',\n      message: 'Select the files and/or folders you wish to ignore:',\n      choices: filelist,\n      default: ['node_modules', 'bower_components']\n    }\n  ];\n  return inquirer.prompt(questions);\n},"}]}]},{"block_type":"element","block":"k6fwzras","search_text":"Notice that we can also provide a list of defaults. In this case, we’re pre-selecting node_modules and bower_components , should they exist.","text_count":140,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Notice that we can also provide a list of defaults. In this case, we&rsquo;re pre-selecting"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"node_modules"}]},{"block_type":"text","content":"and"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"bower_components"}]},{"block_type":"text","content":", should they exist."}]},{"block_type":"element","block":"k6fwzrat","search_text":"With the Inquirer code in place, we can now construct the createGitignore() function. Insert this code in lib/repo.js :","text_count":119,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"With the Inquirer code in place, we can now construct the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"createGitignore()"}]},{"block_type":"text","content":"function. Insert this code in"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"lib/repo.js"}]},{"block_type":"text","content":":"}]},{"block_type":"element","block":"k6fwzrau","search_text":"createGitignore: async () => { const filelist = _.without(fs.readdirSync('.'), '.git', '.gitignore'); if (filelist.length) { const answers = await inquirer.askIgnoreFiles(filelist); if (answers.ignore.length) { fs.writeFileSync( '.gitignore', answers.ignore.join( '\\n' ) ); } else { touch( '.gitignore' ); } } else { touch('.gitignore'); } }, ","text_count":343,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"createGitignore: async () =&gt; {\n  const filelist = _.without(fs.readdirSync('.'), '.git', '.gitignore');\n\n  if (filelist.length) {\n    const answers = await inquirer.askIgnoreFiles(filelist);\n\n    if (answers.ignore.length) {\n      fs.writeFileSync( '.gitignore', answers.ignore.join( '\\n' ) );\n    } else {\n      touch( '.gitignore' );\n    }\n  } else {\n    touch('.gitignore');\n  }\n},"}]}]},{"block_type":"element","block":"k6fwzrav","search_text":"Once “submitted”, we then generate a .gitignore by joining up the selected list of files, separated with a newline. Our function now pretty much guarantees we’ve got a .gitignore file, so we can proceed with initializing a Git repository.","text_count":238,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Once &ldquo;submitted&rdquo;, we then generate a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".gitignore"}]},{"block_type":"text","content":"by joining up the selected list of files, separated with a newline. Our function now pretty much guarantees we&rsquo;ve got a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":".gitignore"}]},{"block_type":"text","content":"file, so we can proceed with initializing a Git repository."}]},{"block_type":"element","block":"k6fwzraw","search_text":"Interacting with Git from within the App","text_count":40,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Interacting with Git from within the App"}]},{"block_type":"element","block":"k6fwzrax","search_text":"There are a number of ways to interact with Git, but perhaps the simplest is to use the simple-git package. This provides a set of chainable methods which, behind the scenes, run the Git executable.","text_count":198,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"There are a number of ways to interact with Git, but perhaps the simplest is to use the"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/simple-git"},"children":[{"block_type":"text","content":"simple-git"}]},{"block_type":"text","content":"package. This provides a set of chainable methods which, behind the scenes, run the Git executable."}]},{"block_type":"element","block":"k6fwzray","search_text":"These are the repetitive tasks we’ll use it to automate:","text_count":56,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"These are the repetitive tasks we&rsquo;ll use it to automate:"}]},{"block_type":"element","block":"k6fwzraz","search_text":"run git init add the .gitignore file add the remaining contents of the working directory perform an initial commit add the newly created remote repository push the working directory up to the remote ","text_count":199,"tag_name":"ol","attributes":{},"children":[{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"run"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"git init"}]}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"add the"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":".gitignore"}]},{"block_type":"text","content":"file"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"add the remaining contents of the working directory"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"perform an initial commit"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"add the newly created remote repository"}]},{"block_type":"element","tag_name":"li","attributes":{},"children":[{"block_type":"text","content":"push the working directory up to the remote"}]}]},{"block_type":"element","block":"k6fwzrb0","search_text":"Insert the following code in lib/repo.js :","text_count":42,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Insert the following code in"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"lib/repo.js"}]},{"block_type":"text","content":":"}]},{"block_type":"element","block":"k6fwzrb1","search_text":"setupRepo: async (url) => { const status = new Spinner('Initializing local repository and pushing to remote...'); status.start(); try { git.init() .then(git.add('.gitignore')) .then(git.add('./*')) .then(git.commit('Initial commit')) .then(git.addRemote('origin', url)) .then(git.push('origin', 'master')); } finally { status.stop(); } }, ","text_count":339,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"setupRepo: async (url) =&gt; {\n  const status = new Spinner('Initializing local repository and pushing to remote...');\n  status.start();\n\n  try {\n    git.init()\n      .then(git.add('.gitignore'))\n      .then(git.add('./*'))\n      .then(git.commit('Initial commit'))\n      .then(git.addRemote('origin', url))\n      .then(git.push('origin', 'master'));\n  } finally {\n    status.stop();\n  }\n},"}]}]},{"block_type":"element","block":"k6fwzrb2","search_text":"Putting It All Together","text_count":23,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Putting It All Together"}]},{"block_type":"element","block":"k6fwzrb3","search_text":"First, let’s set a helper function in lib/github.js for setting up an oauth authentication:","text_count":91,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"First, let&rsquo;s set a helper function in"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"lib/github.js"}]},{"block_type":"text","content":"for setting up an"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"oauth"}]},{"block_type":"text","content":"authentication:"}]},{"block_type":"element","block":"k6fwzrb4","search_text":"githubAuth: (token) => { octokit = new Octokit({ auth: token }); }, ","text_count":68,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"githubAuth: (token) =&gt; {\n  octokit = new Octokit({\n    auth: token\n  });\n},"}]}]},{"block_type":"element","block":"k6fwzrb5","search_text":"Next, we create a function in index.js for handling the logic of acquiring the token. Place this code before the run() function:","text_count":128,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Next, we create a function in"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"index.js"}]},{"block_type":"text","content":"for handling the logic of acquiring the token. Place this code before the"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"run()"}]},{"block_type":"text","content":"function:"}]},{"block_type":"element","block":"k6fwzrb6","search_text":"const getGithubToken = async () => { // Fetch token from config store let token = github.getStoredGithubToken(); if(token) { return token; } // No token found, use credentials to access GitHub account token = await github.getPersonalAccesToken(); return token; }; ","text_count":264,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const getGithubToken = async () =&gt; {\n  // Fetch token from config store\n  let token = github.getStoredGithubToken();\n  if(token) {\n    return token;\n  }\n\n  // No token found, use credentials to access GitHub account\n  token = await github.getPersonalAccesToken();\n\n  return token;\n};"}]}]},{"block_type":"element","block":"k6fwzrb7","search_text":"Finally, we update the run() function by writing code that will handle the main logic of the app:","text_count":97,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Finally, we update the"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"run()"}]},{"block_type":"text","content":"function by writing code that will handle the main logic of the app:"}]},{"block_type":"element","block":"k6fwzrb8","search_text":"const repo = require('./lib/repo'); ... const run = async () => { try { // Retrieve & Set Authentication Token const token = await getGithubToken(); github.githubAuth(token); // Create remote repository const url = await repo.createRemoteRepo(); // Create .gitignore file await repo.createGitignore(); // Set up local repository and push to remote await repo.setupRepo(url); console.log(chalk.green('All done!')); } catch(err) { if (err) { switch (err.status) { case 401: console.log(chalk.red('Couldn\\'t log you in. Please provide correct credentials/token.')); break; case 422: console.log(chalk.red('There is already a remote repository or token with the same name')); break; default: console.log(chalk.red(err)); } } } }; ","text_count":726,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"const repo = require('./lib/repo');\n\n...\n\nconst run = async () =&gt; {\n  try {\n    // Retrieve &amp; Set Authentication Token\n    const token = await getGithubToken();\n    github.githubAuth(token);\n\n    // Create remote repository\n    const url = await repo.createRemoteRepo();\n\n    // Create .gitignore file\n    await repo.createGitignore();\n\n    // Set up local repository and push to remote\n    await repo.setupRepo(url);\n\n    console.log(chalk.green('All done!'));\n  } catch(err) {\n      if (err) {\n        switch (err.status) {\n          case 401:\n            console.log(chalk.red('Couldn\\'t log you in. Please provide correct credentials/token.'));\n            break;\n          case 422:\n            console.log(chalk.red('There is already a remote repository or token with the same name'));\n            break;\n          default:\n            console.log(chalk.red(err));\n        }\n      }\n  }\n};"}]}]},{"block_type":"element","block":"k6fwzrb9","search_text":"As you can see, we ensure the user is authenticated before calling all of our other functions ( createRemoteRepo() , createGitignore() , setupRepo() ) sequentially. The code also handles any errors and offers the user appropriate feedback.","text_count":239,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"As you can see, we ensure the user is authenticated before calling all of our other functions ("},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"createRemoteRepo()"}]},{"block_type":"text","content":","},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"createGitignore()"}]},{"block_type":"text","content":","},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"setupRepo()"}]},{"block_type":"text","content":") sequentially. The code also handles any errors and offers the user appropriate feedback."}]},{"block_type":"element","block":"k6fwzrba","search_text":"You can check out the completed index.js file on our GitHub repo.","text_count":65,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"You can check out the completed"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://github.com/sitepoint-editors/ginit/blob/master/index.js"},"children":[{"block_type":"text","content":"index.js"}]},{"block_type":"text","content":"file on our GitHub repo."}]},{"block_type":"element","block":"k6fwzrbb","search_text":"At this point you should have a working app. Give it a try and satisfy yourself that it works as expected.","text_count":106,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"At this point you should have a working app. Give it a try and satisfy yourself that it works as expected."}]},{"block_type":"element","block":"k6fwzrbc","search_text":"Making the ginit Command Available Globally","text_count":43,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Making the ginit Command Available Globally"}]},{"block_type":"element","block":"k6fwzrbd","search_text":"The one remaining thing to do is to make our command available globally. To do this, we’ll need to add a shebang line to the top of index.js :","text_count":142,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"The one remaining thing to do is to make our command available globally. To do this, we&rsquo;ll need to add a"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://en.wikipedia.org/wiki/Shebang_%28Unix%29"},"children":[{"block_type":"text","content":"shebang"}]},{"block_type":"text","content":"line to the top of"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"index.js"}]},{"block_type":"text","content":":"}]},{"block_type":"element","block":"k6fwzrbe","search_text":"#!/usr/bin/env node","text_count":19,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"#!/usr/bin/env node"}]}]},{"block_type":"element","block":"k6fwzrbf","search_text":"Next, we need to add a bin property to our package.json file. This maps the command name ( ginit ) to the name of the file to be executed (relative to package.json ):","text_count":166,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Next, we need to add a"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"bin"}]},{"block_type":"text","content":"property to our"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"package.json"}]},{"block_type":"text","content":"file. This maps the command name ("},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"ginit"}]},{"block_type":"text","content":") to the name of the file to be executed (relative to"},{"block_type":"element","tag_name":"code","attributes":{},"children":[{"block_type":"text","content":"package.json"}]},{"block_type":"text","content":"):"}]},{"block_type":"element","block":"k6fwzrbg","search_text":"\"bin\": { \"ginit\": \"./index.js\" } ","text_count":33,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"\"bin\": {\n  \"ginit\": \"./index.js\"\n}"}]}]},{"block_type":"element","block":"k6fwzrbh","search_text":"After that, install the module globally and you’ll have a working shell command:","text_count":80,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"After that, install the module globally and you&rsquo;ll have a working shell command:"}]},{"block_type":"element","block":"k6fwzrbi","search_text":"npm install -g ","text_count":15,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"npm install -g"}]}]},{"block_type":"element","block":"k6fwzrbj","search_text":"Works on Windows","text_count":16,"tag_name":"h4","attributes":{},"children":[{"block_type":"text","content":"Works on Windows"}]},{"block_type":"element","block":"k6fwzrbk","search_text":"This will also work on Windows, as npm will helpfully install a cmd wrapper alongside your script .","text_count":99,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"This will also work on Windows, as"},{"block_type":"element","tag_name":"a","attributes":{"href":"http://stackoverflow.com/a/10398567/1136887"},"children":[{"block_type":"text","content":"npm will helpfully install a cmd wrapper alongside your script"}]},{"block_type":"text","content":"."}]},{"block_type":"element","block":"k6fwzrbl","search_text":"If you want to confirm the install worked, you can list your globally installed Node modules using this:","text_count":104,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"If you want to confirm the install worked, you can list your globally installed Node modules using this:"}]},{"block_type":"element","block":"k6fwzrbm","search_text":"npm ls -g --depth=0 ","text_count":20,"tag_name":"pre","attributes":{},"children":[{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":"npm ls -g --depth=0"}]}]},{"block_type":"element","block":"k6fwzrbn","search_text":"Taking it Further","text_count":17,"tag_name":"h2","attributes":{},"children":[{"block_type":"text","content":"Taking it Further"}]},{"block_type":"element","block":"k6fwzrbo","search_text":"We’ve got a fairly nifty, albeit simple command-line app for initializing Git repositories. But there’s plenty more you could do to enhance it further.","text_count":151,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"We&rsquo;ve got a fairly nifty, albeit simple command-line app for initializing Git repositories. But there&rsquo;s plenty more you could do to enhance it further."}]},{"block_type":"element","block":"k6fwzrbp","search_text":"If you’re a Bitbucket user, you could adapt the program to use the Bitbucket API to create a repository. There’s a Node.js API wrapper available to help you get started. You may wish to add an additional command-line option or prompt to ask the user whether they want to use GitHub or Bitbucket (Inquirer would be perfect for just that) or merely replace the GitHub-specific code with a Bitbucket alternative.","text_count":409,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"If you&rsquo;re a Bitbucket user, you could adapt the program to use the Bitbucket API to create a repository. There&rsquo;s a"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.npmjs.com/package/bitbucket-api"},"children":[{"block_type":"text","content":"Node.js API wrapper available"}]},{"block_type":"text","content":"to help you get started. You may wish to add an additional command-line option or prompt to ask the user whether they want to use GitHub or Bitbucket (Inquirer would be perfect for just that) or merely replace the GitHub-specific code with a Bitbucket alternative."}]},{"block_type":"element","block":"k6fwzrbq","search_text":"You could also provide the facility to specify your own set of defaults for the .gitgnore file, instead of a hardcoded list. The preferences package might be suitable here, or you could provide a set of “templates”—perhaps prompting the user for the type of project. You might also want to look at integrating it with the .gitignore.io command-line tool/API.","text_count":358,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"You could also provide the facility to specify your own set of defaults for the"},{"block_type":"element","tag_name":"code","attributes":{"language":"python"},"children":[{"block_type":"text","content":".gitgnore"}]},{"block_type":"text","content":"file, instead of a hardcoded list. The preferences package might be suitable here, or you could provide a set of &ldquo;templates&rdquo;&mdash;perhaps prompting the user for the type of project. You might also want to look at integrating it with the"},{"block_type":"element","tag_name":"a","attributes":{"href":"https://www.gitignore.io/"},"children":[{"block_type":"text","content":".gitignore.io"}]},{"block_type":"text","content":"command-line tool/API."}]},{"block_type":"element","block":"k6fwzrbr","search_text":"Beyond all that, you may also want to add additional validation, provide the ability to skip certain sections, and more.","text_count":120,"tag_name":"p","attributes":{},"children":[{"block_type":"text","content":"Beyond all that, you may also want to add additional validation, provide the ability to skip certain sections, and more."}]}]}]}